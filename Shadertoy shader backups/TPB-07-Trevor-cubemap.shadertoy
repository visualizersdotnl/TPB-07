float snoise(vec2 uv, int wrap)
{
return mix(mix(texelFetch(iChannel0, ivec2(uv)%wrap, 0).x,texelFetch(iChannel0, (ivec2(uv)+ivec2(1,0))%wrap, 0).x,fract(uv.x)),
mix(texelFetch(iChannel0, (ivec2(uv)+ivec2(0,1))%wrap, 0).x,texelFetch(iChannel0, (ivec2(uv)+ivec2(1,1))%wrap, 0).x,fract(uv.x)), fract(uv.y));
}
float perlin(vec2 uv, int wrap)
{
    uv *= float(wrap);
    float t = 0.0;
    float w = 0.5;
    for(int i = 0 ; i < 15; ++i)
    {
        t += snoise(uv,wrap/2)*w;
        uv += uv;
        w *= 0.5;
        //wrap += wrap;
    }
    return t;
}
void mainCubemap( out vec4 fragColor, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )
{
    if(iFrame==0)
    {
    vec3 r = abs(rayDir);
    float axis = max(r.x, max(r.y, r.z));
    
    // fragColor = vec4(0.0);
    
	vec2 uv = fragCoord/iResolution.y;
    // +X face
    if(axis == r.x && rayDir.x > 0.0)
        fragColor.x = perlin(uv, 32);
    }
    else
    {
        fragColor = texture(iChannel1, rayDir);
    }
}
